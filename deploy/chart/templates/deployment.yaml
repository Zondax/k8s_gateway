apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coredns-gateway.fullname" . }}
  labels:
    {{- include "coredns-gateway.labels" . | nindent 4 }}
  {{- with .Values.customLabels }}
    {{ toYaml . | trim | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "coredns-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "coredns-gateway.labels" . | nindent 8 }}
      {{- if .Values.customLabels }}
        {{ toYaml .Values.customLabels | trim | nindent 8 }}
      {{- end }}
      annotations:
        checksum/config: {{ toYaml .Values | sha256sum }}
    spec:
      serviceAccountName: {{ include "coredns-gateway.serviceAccountName" . }}
      containers:
      - name: coredns-gateway
        image: {{ printf "%s:%s" .Values.image.repository ( or .Values.image.tag .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: [ "-conf", "/etc/coredns/Corefile" ]
      {{- if .Values.secure }}
        securityContext:
          runAsUser: 1000
      {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
      {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.port }}
          name: dns-udp
          protocol: UDP
      {{- if (eq .Values.service.useTcp true) }}
        - containerPort: {{ .Values.port }}
          name: dns-tcp
          protocol: TCP
      {{- end }}
      {{- if .Values.config.metrics.enabled }}
        - containerPort: {{ .Values.config.metrics.port }}
          name: metrics
          protocol: TCP
      {{- end }}
      {{- if .Values.config.probes.liveness }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      {{- end }}
      {{- if .Values.config.probes.readiness }}
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "coredns-gateway.fullname" . }}
            items:
            - key: Corefile
              path: Corefile
          {{- range .Values.zoneFiles }}
            - key: {{ .filename }}
              path: {{ .filename }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
